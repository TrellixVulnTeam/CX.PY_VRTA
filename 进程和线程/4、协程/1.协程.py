'''

子函数/程序：在所有语言中，都是层级调用，比如A调用B，在B执行的过程中又可以调用C，C执行完毕返回，B执行完毕返回，最后是A执行完毕.是通过栈实现的，一个线程就是执行一个子程序，子程序调用总是一个入口一次返回，调用的顺序是明确的




概述：协程看上去也是子程序，但是执行过程中，在子程序的内部可中断，然后，转而去执行别的子程序，不是函数调用。

'''
'''
def A():
    print("A---start")
    B()
    print("A---end")


def B():
    print("B---start")
    C()
    print("B---end")

def C():
    print("C---start")
    print("C---end")

A()
'''
def A():
    print(1)
    print(2)
    print(3)

def B():
    print("X")
    print("Y")
    print("Z")


'''
与线程相比，协程的执行效率极高，因为只有一个线程，也不存在同时写变量的冲突，在协程中共享资源不加锁，只需要判断状态

'''







